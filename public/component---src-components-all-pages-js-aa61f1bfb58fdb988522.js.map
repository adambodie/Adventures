{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/components/AllPages.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./src/components/NewCard.js","webpack:///./src/components/CardDescription.js","webpack:///./src/components/Card.js"],"names":["Pagination","render","_this$props","this","props","prevPage","numPages","nextPage","react_default","a","createElement","className","gatsby_browser_entry","to","rel","Array","from","length","_","i","key","activeStyle","backgroundColor","Component","AllPages","data","pageContext","posts","allItemJson","edges","currentPage","toString","Layout","map","x","index","Card","mainId","node","backgroundImage","color","description","tags","date","startDate","endDate","Pagination_Pagination","listQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","Header","src","alt","data-testid","lib_default","name","children","Fragment","Helmet","charSet","href","integrity","crossorigin","components_Header","NewCard","moment","isBetween","now","CardDescription","formatDate","format","style","fontWeight","isValid","isSame","frontStyle","backgroundSize","backgroundPosition","NewCard_NewCard","CardDescription_CardDescription"],"mappings":"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","file":"component---src-components-all-pages-js-aa61f1bfb58fdb988522.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport '../styles/home.scss'\r\n\r\nexport default class Pagination extends Component {\r\n\trender() {\r\n\t\tconst { prevPage, numPages, nextPage } = this.props;\r\n\t\treturn(\r\n\t\t\t<div className='paginate'>\r\n\t\t\t\t<ul className='paginate-pages'>\r\n\t\t\t\t\t<li><Link to={`/pages/${prevPage > 0 ? prevPage : '/'}`} rel='prev'>← Prev</Link></li>\r\n\t\t\t\t\t{Array.from({ length: numPages }, (_, i) => (\r\n\t\t\t\t\t\t<li key={`pagination-number${i + 1}`}>\r\n\t\t\t\t\t\t\t<Link to={`/pages/${i === 0 ? '' : i + 1}`} activeStyle={{ backgroundColor: '#7a859a' }}>\r\n\t\t\t\t\t\t\t\t{i + 1}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<li><Link to={`/pages/${nextPage > numPages ? numPages : nextPage}`} rel='next'>Next →</Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport '../styles/home.scss'\r\nimport '../styles/index.scss'\r\nimport Layout from './Layout'\r\nimport Card from './Card'\r\nimport Pagination from './Pagination'\r\n\r\nexport default class AllPages extends Component {\r\n\trender() {\r\n\t\tconst { data, pageContext } = this.props;\r\n\t\tconst posts = data.allItemJson.edges;\r\n\t\tconst { currentPage, numPages } = pageContext;\r\n\t\tconst prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\r\n\t\tconst nextPage = (currentPage + 1).toString();\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<h1>Projects</h1>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t{posts.map((x, index) => (\r\n\t\t\t\t\t\t\t<div className='col-lg-4' key={index} >\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tmainId={x.node.mainId}\r\n\t\t\t\t\t\t\t\t\tbackgroundImage={x.node.backgroundImage}\r\n\t\t\t\t\t\t\t\t\tbackgroundColor={x.node.backgroundColor}\r\n\t\t\t\t\t\t\t\t\tcolor={x.node.color}\r\n\t\t\t\t\t\t\t\t\tdescription={x.node.description}\r\n\t\t\t\t\t\t\t\t\ttags={x.node.tags}\r\n\t\t\t\t\t\t\t\t\tdate={x.node.date}\r\n\t\t\t\t\t\t\t\t\tstartDate={x.node.startDate}\r\n\t\t\t\t\t\t\t\t\tendDate={x.node.endDate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Pagination \r\n\t\t\t\t\t\tprevPage={prevPage} \r\n\t\t\t\t\t\tnumPages={numPages} \r\n\t\t\t\t\t\tnextPage={nextPage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport const listQuery = graphql`\r\n  \tquery projectListQuery($skip: Int!, $limit: Int!)  {\r\n\t\tallItemJson( \r\n\t\t\tsort: {fields: [startDate, mainId], order: [DESC, DESC]}\r\n\t\t\tlimit: $limit \r\n\t\t\tskip: $skip\r\n\t\t\t) {\r\n\t\tedges {\r\n\t\t\tnode {\r\n\t\t\t\tmainId\r\n\t\t\t\tbackgroundImage\r\n\t\t\t\ttitle\r\n\t\t\t\tcategory\r\n\t\t\t\tcolor\r\n\t\t\t\tbackgroundColor\r\n\t\t\t\tstartDate\r\n\t\t\t\tendDate\r\n\t\t\t\tdescription\r\n\t\t\t\ttags\r\n\t\t\t\tdate\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport '../styles/header.scss'\r\nimport { Link } from 'gatsby'\r\nimport FontAwesome from 'react-fontawesome'\r\n\r\nconst Header = () => (\r\n\t<header>\r\n\t\t<div className='header-logo'>\r\n\t\t\t<img src={'https://adventures.bodiewebdesign.com/_photos/logo.jpg'} alt='Logo' className='img-fluid' />\r\n\t\t\t<h1 data-testid='header-title'>Adam&apos;s Adventures</h1>\r\n\t\t\t<Link to='/pages'>\r\n\t\t\t\t<FontAwesome className='icon' name='home'/>\r\n\t\t\t</Link>\r\n\t\t\t<Link to='/tags'>\r\n\t\t\t\t<FontAwesome className='icon' name='tags'/>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t</header>\r\n)\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nexport default ({ children }) => (\r\n\t<React.Fragment>\r\n\t\t<Helmet>\r\n\t\t\t<meta charSet='utf-8' />\r\n\t\t\t<title>Adam's Adventures</title>\r\n\t\t\t<link rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css' integrity='sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T' crossorigin='anonymous' />\r\n\t\t\t<link rel='stylesheet' href='https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css' />\r\n\t\t\t<link href='https://fonts.googleapis.com/css?family=Permanent+Marker&display=swap' rel='stylesheet' />\r\n\t\t</Helmet>\r\n\t\t<Header />\r\n\t\t{children}\r\n\t</React.Fragment>\r\n)\r\n","import React, { Component } from 'react'\r\nimport '../styles/home.scss'\r\nimport moment from 'moment'\r\n\r\nexport default class NewCard extends Component {\r\n\trender() {\r\n\t\t//Two weeks\r\n\t\tconst { date } = this.props;\r\n\t\treturn(\r\n\t\t\tmoment(date).isBetween((moment.now() - 12096000000), moment.now()) && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<span></span>\r\n\t\t\t\t\t<h6>New</h6>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../styles/home.scss'\r\nimport moment from 'moment'\r\n\r\nexport default class CardDescription extends Component {\r\n\trender() {\r\n\t\t//Two weeks\r\n\t\tconst { description, color, startDate, endDate, date } = this.props;\r\n\t\tconst formatDate = (date) => moment(date).format('MMMM DD, YYYY');\r\n\t\treturn(\r\n\t\t<React.Fragment>\r\n\t\t<p style={{color: color, fontWeight: 'bold'}}>{description}</p>\r\n\t\t\t{moment(date).isValid() && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<p style={{color: color}}>Visit: {formatDate(startDate)} {!moment(startDate).isSame(endDate) && (` to ${formatDate(endDate)}`)}</p>\r\n\t\t\t\t\t<p style={{color: color}}>Added: {formatDate(date)}</p>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport '../styles/home.scss'\r\nimport NewCard from './NewCard'\r\nimport CardDescription from './CardDescription'\r\n\r\nexport default class Card extends Component {\r\n\trender() {\r\n\t\tconst { backgroundImage, color, backgroundColor, description, mainId, date, startDate, endDate } = this.props;\r\n\t\tconst frontStyle = {\r\n\t\t\tbackgroundImage: `url('https://adventures.bodiewebdesign.com/_photos/links/adventure${mainId}.jpg')`, \r\n\t\t\tbackgroundSize: 'cover', \r\n\t\t\tbackgroundPosition: 'top'\r\n\t\t};\r\n\t\t\r\n\t\treturn(\r\n\t\t<Link to={`/${backgroundImage}`}>\r\n\t\t\t<div className='flip-card'>\r\n\t\t\t\t<div className='flip-card-inner'>\r\n\t\t\t\t\t<div className='flip-card-front' style={frontStyle}>\r\n\t\t\t\t\t\t<NewCard date={date} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='flip-card-back' style={{backgroundColor: backgroundColor}}>\r\n\t\t\t\t\t\t<CardDescription \r\n\t\t\t\t\t\t\t\tdescription={description} \r\n\t\t\t\t\t\t\t\tcolor={color} \r\n\t\t\t\t\t\t\t\tstartDate={startDate} \r\n\t\t\t\t\t\t\t\tendDate={endDate} \r\n\t\t\t\t\t\t\t\tdate={date} \r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t\t);\r\n\t}\r\n}\r\n"],"sourceRoot":""}